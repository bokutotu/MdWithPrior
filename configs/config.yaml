# @package _global_

# specify here default training configuration
defaults:
  - trainer: default
  - optimizer: adam
  - scheduler: step
  - logger: mlflow
  - models: mlp
  - dataset: mlp

  # enable color logging
  - override hydra/job_logging: default
  - override hydra/hydra_logging: default

# global configurations
experiment_name: default
gpus: null
lr: 0.003
epochs: 10
batch_size: 128

train_test_rate: 0.9

# for CGnet
is_angle_prior: true
is_length_prior: true
is_dihedral_prior: true

is_normalize: true

coordinates_path: /Users/kondouakira/Code/Lab/cgnet/examples/data/ala2_coordinates.npy
forces_path: /Users/kondouakira/Code/Lab/cgnet/examples/data/ala2_forces.npy

# path to original working directory (that `run.py` was executed from in command line)
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have path to original work dir as a special variable
# read more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}


hydra:
    # output paths for hydra logs
    run:
        dir: /tmp/logs/runs/${now:%Y-%m-%d}/${now:%H:%M:%S}/${hydra.job.override_dirname}
    sweep:
        dir: logs/multiruns/${now:%Y-%m-%d}/${now:%H:%M:%S}/
        subdir: ${hydra.job.override_dirname}

    job:
      # you can set here environment variables that are universal for all users
      # for system specific variables (like data paths) it's better to use .env file!
      # env_set:
      config:
        # configuration for the ${hydra.job.override_dirname} runtime variable
        override_dirname:
          kv_sep: '='
          item_sep: '/'
